package server;

import java.util.List;

import dao.PayServDAO;
import model.Bill;
import model.Client;
import model.Contract;
import model.Provider;

/**
 * Class used to handle the request.
 * @author Florin Sia
 *
 */
public class ServerUtils {
	/**
	 * static field for calling methods from DAO.
	 */
	private static PayServDAO payServDAO = new PayServDAO();

	/**
	 * Method used to get values that fulfill criterias.
	 * @param look
	 * @return values that fulfills criterias.  
	 */
	@SuppressWarnings({ "rawtypes" })
	public static List getValue(RequestResponse look) {
		List object = null;
		String username;
		switch (look.request) {
		case GET_CLIENTS:
			object = (List) payServDAO.getAllClients();
			break;
		case GET_PROVIDERS:
			object = (List) payServDAO.getAllProviders();
			break;
		case GET_CLIENT_BY_USERNAME:
			username = look.parameters.get(0).toString();
			object = (List) payServDAO.getClientByUsername(username);
			break;
		case GET_PROVIDER_BY_NAME:
			username = look.parameters.get(0).toString();
			object = (List) payServDAO.getProviderByName(username);
			break;
		case GET_BILLS:
			object = (List) payServDAO.getAllBills();
			break;
		case GET_BILLS_BY_CLIENT:
			Client client = (Client) look.parameters.get(0);
			object = (List) payServDAO.getBillsByClient(client);
			break;
		case GET_CONTRACT_BY_DETAILS:
			Client c = (Client) look.parameters.get(0);
			Provider p = (Provider) look.parameters.get(1);
			object = (List) payServDAO.getContractByDetails(c, p);
			break;
		case ADD_CLIENT:
			payServDAO.addClient((Client) look.parameters.get(0));
			break;
		case PAY_BILL:
			payServDAO.payBill((Integer) look.parameters.get(0));
			break;
		case UPDATE_BALANCE:
			payServDAO.updateBalance((Integer) look.parameters.get(0), (Double) look.parameters.get(1));
			break;
		case ADD_BILL:
			payServDAO.addBill((Bill) look.parameters.get(0));
			break;
		case ADD_CONTRACT:
			payServDAO.addContract((Contract) look.parameters.get(0));
			break;
		case DELETE_CONTRACT:
			payServDAO.deleteContract((Integer) look.parameters.get(0));
			break;
		case PAY_BILL_BY_DETAIL:
			payServDAO.payBillByDetails((String) look.parameters.get(0));
			break;
		case ADD_BILL_TO_CLIENT:
			payServDAO.addBillToClient((Bill) look.parameters.get(0), (Integer) look.parameters.get(1));
			break;
		case ADD_PROVIDER:
			break;
		case GET_CONTRACT_BY_PROVIDER:
			Provider provider = (Provider) look.parameters.get(0);
			object = (List) payServDAO.getContractsByProvider(provider);
			break;
		default:
			break;
		}

		return object;
	}

}
